name: ECS Continuous Integration
run-name: ${{ github.actor }} is running Continuous Integration on GitHub Actions ðŸš€
on: [push]
env: 
  ECR_ENDPOINT: 255945442255.dkr.ecr.us-east-1.amazonaws.com/luqman-node-app
jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Run installation of dependencies commands
        run: npm install

  code-unit-testing:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Run installation of dependencies commands
        run: npm install
      - name: Run unit testing command
        run: npm test

  build-and-scan-image:
    runs-on: ubuntu-latest
    needs: [code-unit-testing]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1
      - name: Login to ECR
        run: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ env.ECR_ENDPOINT }}
      - name: Docker build and tag
        run: |
            docker build -t ${{ vars.IMAGE_NAME }} .
            docker tag ${{ vars.IMAGE_NAME }}:latest ${{ env.ECR_ENDPOINT }}/${{ vars.IMAGE_NAME }}:latest
      - name: Run image scan
        uses: aquasecurity/trivy-action@master
        with:
            image-ref: '${{ vars.IMAGE_NAME }}:latest'
            format: 'table'
            # exit-code: '1'
            ignore-unfixed: true
            vuln-type: 'os,library'
            severity: 'MEDIUM,HIGH,CRITICAL'
      - name: Docker publish to ECR
        run: docker push ${{ env.ECR_ENDPOINT }}/${{ vars.IMAGE_NAME }}:latest


#   deploy:
#     runs-on: ubuntu-latest
#     needs: unit-testing
#     steps:
#     - uses: actions/checkout@v3
#     - name: Use Node.js 18.x
#       uses: actions/setup-node@v3
#       with:
#         node-version: 18.x
#     - run: npm ci
#     - name: serverless deploy
#       uses: serverless/github-action@v3.2
#       with:
#         args: deploy
#       env:
#         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
name: ECS Continuous Deployment
run-name: ${{ github.actor }} is running deployment on GitHub Actions ðŸš€
on:
  workflow_dispatch:
    inputs:
        target_env:
            type: environment
            description: Select the environment
  workflow_call:
    inputs:
        target_env:
            type: string
            required: true

jobs:
  pre-deploy-step:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: print environment
        run: | 
          echo "env selected is ${{ inputs.target_env }}"
  
  deploy-step:
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@main

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@main
        with:
          task-definition: ${{ vars.ECS_TASK_DEFN_NAME }}-${{ inputs.target_env }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@main
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true

      - name: deploy image to server
        run: | 
          echo "Deploying image..."
          echo "Deploying image..."
          echo "Deploying image..."
          echo "Deployed successfully!"
